AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template creates and configures CloudTrail event-driven pipeline used by tenable.cs to detect configuration changes in your AWS environment. The single account stack will provision an EventBridge rule that is used to ingest cloud events into tenable.cs through an SNS topic. This stack will optionally provision CloudTrail and related resources as this is a pre-requisite. **Note** Please make sure that any resources with potentially conflicting names are deleted/renamed before provisioning this stack.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Cloud Events
        Parameters:
          - TenableAccessToken
          - EventRuleName
          - SNSTopicName
      - Label:
          default: Optional CloudTrail Configuration
        Parameters:
          - CreateTrail
          - TrailName
          - EnableLogFileValidation
          - TrailBucketName
          - LogGroupName
          - RetentionPeriod
    ParameterLabels:
      EnableLogFileValidation:
        default: Enable log file validation
      TenableAccessToken:
        default: Access token for tenable.cs

Parameters:
  EnableLogFileValidation:
    Type: String
    Default: True
    Description: Indicates whether CloudTrail validates the integrity of log files.
    AllowedValues:
      - True
      - False

  CreateTrail:
    Type: 'String'
    Description: >-
      Indicates whether CloudTrail needs to be created.
    Default: True
    AllowedValues:
      - True
      - False

  TrailName:
    Type: 'String'
    Description: >-
      Name of the trail to be created. Note: this trail will not be created if CreateTrail is "False"
    Default: AccountLevelCloudTrail

  TrailBucketName:
    Type: String
    Default: tenable-cloudtrail-bucket
    Description: >-
      Name of the S3 bucket where CloudTrail will store logs. Note: To avoid namespace conflicts, the AWS account ID will be suffixed to the bucket name. If a bucket with the same name exists within your account, please make sure to delete it before creating this CloudFormation stack.

  LogGroupName:
    Type: 'String'
    Description: >-
      Name of the CloudWatch log group to be created. Note: log group will not be created if CreateTrail is "False".
    Default: TenableTrailLogGroup

  RetentionPeriod:
    Type: 'Number'
    Description: Retention Period of the CloudWatch log group in days (Not required when the CreateTrail is false)
    ConstraintDescription: Value must be a positive whole number
    Default: 5

  SNSTopicName:
    Type: String
    Default: TenableSNSTopic
    Description: SNS topic that will act as a target for event rules triggered by CloudTrail events.

  TenableAccessToken:
    Type: String
    Description: Access token which is required for the tenable.cs SNS subscription. This token can be obtained from the integration page in tenable.cs under "API tokens".

  EventRuleName:
    Type: String
    Default: TenableTrailMasterEventRule
    Description: Name of event rule

Conditions:
  TrailRequired: !Equals
    - !Ref CreateTrail
    - True

Resources:
  TrailBucket:
    Condition: TrailRequired
    DeletionPolicy: Retain
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
      VersioningConfiguration:
        Status: Enabled
      BucketName: !Sub "${TrailBucketName}${AWS::AccountId}"
      Tags:
      - Key: "owner"
        Value: "tenable"
      BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256

  TrailBucketPolicy:
    Condition: TrailRequired
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TrailBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AWSTrailBucketPermissionsCheck
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${TrailBucketName}${AWS::AccountId}/*"
          - Sid: deny-HTTP-requests
            Effect: Deny
            Principal: "*"
            Action: s3:*
            Resource: 
              - !Sub "arn:aws:s3:::${TrailBucketName}${AWS::AccountId}/*"
            Condition:
              Bool:
                aws:SecureTransport: false
          - Sid: AWSTrailBucketDelivery
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub "arn:${AWS::Partition}:s3:::${TrailBucket}/AWSLogs/${AWS::AccountId}/*"

  CloudWatchLogGroup:
    Condition: TrailRequired
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref LogGroupName
      RetentionInDays: !Ref RetentionPeriod

  CloudWatchLogRole:
    Condition: TrailRequired
    Type: AWS::IAM::Role
    Properties:
      Tags:
      - Key: "owner"
        Value: "Tenable"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - cloudtrail.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: CloudWatchLogPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource:
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${CloudWatchLogGroup}:log-stream:${AWS::AccountId}_CloudTrail_${AWS::Region}*

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${SNSTopicName}
      DisplayName: AWS org level CloudTrail notification topic
      Tags:
      - Key: "owner"
        Value: "Tenable"

  SNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SNSTopic
      PolicyDocument:
        Statement:
          - Sid: AWSCloudTrailSNSPolicy
            Action:
              - sns:Publish
            Effect: Allow
            Resource: !Ref SNSTopic
            Principal:
              Service:
                - cloudtrail.amazonaws.com
                - events.amazonaws.com
  Trail:
    Condition: TrailRequired
    DependsOn:
      - TrailBucketPolicy
      - TrailBucket
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: !Ref TrailName
      CloudWatchLogsLogGroupArn: !GetAtt [ "CloudWatchLogGroup", "Arn" ]
      CloudWatchLogsRoleArn: !GetAtt [ "CloudWatchLogRole", "Arn" ]
      S3BucketName: !Ref TrailBucket
      IsLogging: true
      EnableLogFileValidation: !Ref EnableLogFileValidation
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      IsOrganizationTrail: false
      Tags:
      - Key: "owner"
        Value: "Tenable"

  EventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub ${EventRuleName}
      Description: Rule to capture events occuring in the AWS account
      EventPattern:
        detail:
          readOnly:
            - false
        detail-type:
          - "AWS API Call via CloudTrail"
          - "AWS Console Sign In via CloudTrail"
      State: "ENABLED"
      Targets:
        - Id: "1"
          Arn: !Ref SNSTopic
  HTTPSNotification:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Sub 'https://sensor.cloud.tenable.com/cns/v1/app/cloudevent/aws?accesstoken=${TenableAccessToken}&cloud=aws'
      Protocol: https
      TopicArn: !Ref SNSTopic
      DeliveryPolicy:
        healthyRetryPolicy:
          numRetries: 12
          # 3 retries with no wait
          numNoDelayRetries: 3
          # 3 retries 10 seconds apart
          minDelayTarget: 10
          numMinDelayRetries: 3
          # 3 retries with exponential backoff
          # from 10 to 3600 seconds
          backoffFunction: exponential
          # 3 retries 3600 seconds apart
          maxDelayTarget: 500
          numMaxDelayRetries: 3
        # Max number of messages sent per second
        throttlePolicy:
          maxReceivesPerSecond: 1000